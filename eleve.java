
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import javax.swing.JOptionPane;
import javax.swing.SwingUtilities;
import javax.swing.table.DefaultTableModel;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author ASUS
 */

public class eleve extends javax.swing.JFrame {
    /**
     * Creates new form eleve
     */
    public eleve() {
        initComponents();
        populateComboBox();
        updateTable();
        clearFields();
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        label1 = new java.awt.Label();
        jScrollPane1 = new javax.swing.JScrollPane();
        table_eleve = new javax.swing.JTable();
        btn_quitter = new java.awt.Button();
        label32 = new java.awt.Label();
        label33 = new java.awt.Label();
        jScrollPane8 = new javax.swing.JScrollPane();
        table_repartition = new javax.swing.JTable();
        cb_repartition = new javax.swing.JComboBox<>();
        jPanel3 = new javax.swing.JPanel();
        label11 = new java.awt.Label();
        txt_chercher = new java.awt.TextField();
        btn_chercher = new java.awt.Button();
        jPanel2 = new javax.swing.JPanel();
        label3 = new java.awt.Label();
        label4 = new java.awt.Label();
        label7 = new java.awt.Label();
        txt_matricule = new java.awt.TextField();
        txt_nom = new java.awt.TextField();
        txt_prenom = new java.awt.TextField();
        btn_ajouter = new java.awt.Button();
        label13 = new java.awt.Label();
        txt_age = new java.awt.TextField();
        cb_classe = new javax.swing.JComboBox<>();
        label36 = new java.awt.Label();
        jPanel11 = new javax.swing.JPanel();
        txt_modif_matr = new java.awt.TextField();
        txt_modif_nom = new java.awt.TextField();
        txt_modif_prenom = new java.awt.TextField();
        txt_modif_age = new java.awt.TextField();
        txt_modif_classe = new java.awt.TextField();
        btn_modifier = new java.awt.Button();
        label5 = new java.awt.Label();
        label6 = new java.awt.Label();
        label8 = new java.awt.Label();
        label9 = new java.awt.Label();
        label10 = new java.awt.Label();
        jPanel12 = new javax.swing.JPanel();
        btn_supprimer = new java.awt.Button();
        cb_retirer = new javax.swing.JComboBox<>();
        btn_retirer = new java.awt.Button();
        label12 = new java.awt.Label();
        label37 = new java.awt.Label();
        txt_matrsupp = new java.awt.TextField();
        jPanel8 = new javax.swing.JPanel();
        label35 = new java.awt.Label();
        txt_designation = new java.awt.TextField();
        btn_inserer = new java.awt.Button();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(255, 255, 255));
        setResizable(false);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(""));

        label1.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        label1.setForeground(new java.awt.Color(0, 51, 102));
        label1.setText("Listes des eleves inscrites");

        table_eleve.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        table_eleve.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Matricules", "Noms", "Prenoms", "Ages", "Classe"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.Long.class, java.lang.Long.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, true, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(table_eleve);

        btn_quitter.setBackground(new java.awt.Color(153, 0, 0));
        btn_quitter.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        btn_quitter.setForeground(new java.awt.Color(255, 255, 255));
        btn_quitter.setLabel("Deconnexion");
        btn_quitter.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_quitterActionPerformed(evt);
            }
        });

        label32.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        label32.setForeground(new java.awt.Color(0, 51, 102));
        label32.setText("Repartitions par classes");

        label33.setText("Classe");

        table_repartition.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        table_repartition.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Matricules", "Noms", "Prenoms", "Ages"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane8.setViewportView(table_repartition);
        if (table_repartition.getColumnModel().getColumnCount() > 0) {
            table_repartition.getColumnModel().getColumn(0).setHeaderValue("Matricules");
            table_repartition.getColumnModel().getColumn(1).setHeaderValue("Noms");
            table_repartition.getColumnModel().getColumn(2).setHeaderValue("Prenoms");
            table_repartition.getColumnModel().getColumn(3).setHeaderValue("Ages");
        }

        cb_repartition.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cb_repartitionActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(212, 212, 212)
                                .addComponent(label1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(218, 218, 218)
                                .addComponent(label32, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 217, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(label33, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(26, 26, 26)
                        .addComponent(cb_repartition, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane8)
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btn_quitter, javax.swing.GroupLayout.PREFERRED_SIZE, 176, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(256, 256, 256))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(label1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 265, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(label32, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(9, 9, 9)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(cb_repartition, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(label33, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane8, javax.swing.GroupLayout.PREFERRED_SIZE, 192, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btn_quitter, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel3.setBackground(new java.awt.Color(255, 255, 255));

        label11.setText("Matricule");

        btn_chercher.setBackground(new java.awt.Color(255, 255, 255));
        btn_chercher.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        btn_chercher.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        btn_chercher.setForeground(new java.awt.Color(0, 51, 102));
        btn_chercher.setLabel("Chercher");
        btn_chercher.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_chercherActionPerformed(evt);
            }
        });

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));
        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "INSCRIPTIONS", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Times New Roman", 0, 12), new java.awt.Color(0, 51, 102))); // NOI18N

        label3.setText("Noms");

        label4.setText("Prenoms");

        label7.setText("Age");

        btn_ajouter.setBackground(new java.awt.Color(204, 255, 255));
        btn_ajouter.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        btn_ajouter.setLabel("Ajouter");
        btn_ajouter.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_ajouterActionPerformed(evt);
            }
        });

        label13.setText("Matricule");

        cb_classe.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        cb_classe.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cb_classeActionPerformed(evt);
            }
        });

        label36.setText("Classe");

        jPanel11.setBackground(new java.awt.Color(255, 255, 255));
        jPanel11.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "MODIFICATION", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Times New Roman", 0, 12), new java.awt.Color(0, 51, 102))); // NOI18N

        btn_modifier.setBackground(new java.awt.Color(0, 204, 102));
        btn_modifier.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        btn_modifier.setLabel("Modifier");
        btn_modifier.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_modifierActionPerformed(evt);
            }
        });

        label5.setText("Matricule");

        label6.setText("Noms");

        label8.setText("Prenoms");

        label9.setText("Age");

        label10.setText("Classe");

        javax.swing.GroupLayout jPanel11Layout = new javax.swing.GroupLayout(jPanel11);
        jPanel11.setLayout(jPanel11Layout);
        jPanel11Layout.setHorizontalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel11Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel11Layout.createSequentialGroup()
                        .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(label6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(label8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(label9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(label10, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(17, 17, 17)
                        .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txt_modif_nom, javax.swing.GroupLayout.DEFAULT_SIZE, 111, Short.MAX_VALUE)
                            .addComponent(txt_modif_prenom, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(txt_modif_age, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(txt_modif_classe, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(jPanel11Layout.createSequentialGroup()
                        .addComponent(label5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(19, 19, 19)
                        .addComponent(txt_modif_matr, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap())
            .addGroup(jPanel11Layout.createSequentialGroup()
                .addGap(57, 57, 57)
                .addComponent(btn_modifier, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel11Layout.setVerticalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel11Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txt_modif_matr, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(label5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txt_modif_nom, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(label6, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel11Layout.createSequentialGroup()
                        .addComponent(label8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(label9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel11Layout.createSequentialGroup()
                        .addComponent(txt_modif_prenom, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txt_modif_age, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txt_modif_classe, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(label10, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(19, 19, 19)
                .addComponent(btn_modifier, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(24, Short.MAX_VALUE))
        );

        jPanel12.setBackground(new java.awt.Color(255, 255, 255));
        jPanel12.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "SUPPRESSION", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Times New Roman", 0, 12), new java.awt.Color(0, 51, 102))); // NOI18N

        btn_supprimer.setBackground(new java.awt.Color(255, 0, 0));
        btn_supprimer.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        btn_supprimer.setForeground(new java.awt.Color(0, 0, 0));
        btn_supprimer.setLabel("Supprimer");
        btn_supprimer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_supprimerActionPerformed(evt);
            }
        });

        cb_retirer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cb_retirerActionPerformed(evt);
            }
        });

        btn_retirer.setBackground(new java.awt.Color(255, 0, 0));
        btn_retirer.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        btn_retirer.setLabel("Retirer");
        btn_retirer.setMaximumSize(null);
        btn_retirer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_retirerActionPerformed(evt);
            }
        });

        label12.setText("Matricule(Eleve)");

        label37.setText("Classe");

        javax.swing.GroupLayout jPanel12Layout = new javax.swing.GroupLayout(jPanel12);
        jPanel12.setLayout(jPanel12Layout);
        jPanel12Layout.setHorizontalGroup(
            jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel12Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel12Layout.createSequentialGroup()
                        .addComponent(label37, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 17, Short.MAX_VALUE)
                        .addComponent(cb_retirer, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel12Layout.createSequentialGroup()
                        .addComponent(label12, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txt_matrsupp, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap())
            .addGroup(jPanel12Layout.createSequentialGroup()
                .addGap(51, 51, 51)
                .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btn_retirer, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btn_supprimer, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel12Layout.setVerticalGroup(
            jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel12Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(label12, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txt_matrsupp, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(19, 19, 19)
                .addComponent(btn_supprimer, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(20, 20, 20)
                .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(label37, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cb_retirer, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(19, 19, 19)
                .addComponent(btn_retirer, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(28, 28, 28))
        );

        jPanel8.setBackground(new java.awt.Color(255, 255, 255));
        jPanel8.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "INSERTION CLASSE", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Times New Roman", 0, 12), new java.awt.Color(0, 51, 102))); // NOI18N

        label35.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        label35.setText("Classe");

        txt_designation.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_designationActionPerformed(evt);
            }
        });

        btn_inserer.setBackground(new java.awt.Color(204, 255, 255));
        btn_inserer.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        btn_inserer.setLabel("Inserer");
        btn_inserer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_insererActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel8Layout.createSequentialGroup()
                .addGap(34, 34, 34)
                .addComponent(label35, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(29, 29, 29)
                .addComponent(txt_designation, javax.swing.GroupLayout.PREFERRED_SIZE, 182, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btn_inserer, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(txt_designation, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btn_inserer, javax.swing.GroupLayout.DEFAULT_SIZE, 28, Short.MAX_VALUE)
                    .addComponent(label35, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 12, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jPanel11, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel12, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(label13, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(label3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(label4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(label7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(63, 63, 63)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txt_matricule, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(txt_nom, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(txt_prenom, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(txt_age, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(btn_ajouter, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(label36, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(74, 74, 74)
                                .addComponent(cb_classe, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))))
                .addContainerGap())
            .addComponent(jPanel8, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txt_matricule, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(label13, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txt_nom, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(label3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(8, 8, 8)
                        .addComponent(txt_prenom, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(label4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(label7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txt_age, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(label36, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cb_classe, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btn_ajouter, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel12, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel11, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(label11, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txt_chercher, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btn_chercher, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btn_chercher, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(label11, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txt_chercher, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void populateComboBox() {
            String url = "jdbc:postgresql://localhost:5432/etudiant";
            String user = "postgres";
            String password = "1234";
            String sql = "SELECT designation FROM classe";

            try (Connection conn = DriverManager.getConnection(url, user, password);
                 Statement stmt = conn.createStatement();
                 ResultSet rs = stmt.executeQuery(sql)) {

                cb_classe.removeAllItems();
                cb_retirer.removeAllItems();
                cb_repartition.removeAllItems();

            
                while (rs.next()) {
                    String designation = rs.getString("designation");
                    cb_classe.addItem(designation);
                    cb_retirer.addItem(designation);
                    cb_repartition.addItem(designation);
                }

            } catch (SQLException e) {
                // Affiche l'erreur 
                JOptionPane.showMessageDialog(this, "Erreur lors du chargement des classes : " + e.getMessage());
            }
        }

    private void clearFields() {
        // Réinitialiser les champs de texte pour l'ajout
        txt_matricule.setText("");
        txt_nom.setText("");
        txt_prenom.setText("");
        txt_age.setText("");
        cb_classe.setSelectedIndex(-1); 

        // Réinitialiser les champs de texte pour la suppression
        txt_matrsupp.setText("");
        cb_retirer.setSelectedIndex(-1);

        // Réinitialiser les champs de texte pour la repartition
        cb_repartition.setSelectedIndex(-1);

        // Réinitialiser les champs de texte pour la recherche
        txt_chercher.setText("");

        // Réinitialiser les champs de texte pour l'insertion de la nouvelle classe
        txt_designation.setText("");

        // Réinitialiser les champs de texte pour la modification
        txt_modif_matr.setText("");
        txt_modif_nom.setText("");
        txt_modif_prenom.setText("");
        txt_modif_age.setText("");
        txt_modif_classe.setText(""); 
    }

        public static void main(String[] args) {
            SwingUtilities.invokeLater(eleve::new);
        }
    
    private void btn_quitterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_quitterActionPerformed
        // TODO add your handling code here:
            login frame = new login();
            frame.setVisible(true);
            this.setVisible(false);
    }//GEN-LAST:event_btn_quitterActionPerformed

    private void btn_ajouterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_ajouterActionPerformed
        if (!txt_matricule.getText().trim().isEmpty() &&
            !txt_nom.getText().trim().isEmpty() &&
            !txt_prenom.getText().trim().isEmpty() &&
            !txt_age.getText().trim().isEmpty() &&
            cb_classe.getSelectedItem() != null) {

            Connection conn = null;
            Statement stmt = null;

            try {
                conn = DriverManager.getConnection("jdbc:postgresql://localhost:5432/etudiant", "postgres", "1234");

                String sql = "INSERT INTO eleve (matricule, nom, prenom, age, designation) VALUES ('" +
                             txt_matricule.getText() + "', '" +
                             txt_nom.getText() + "', '" +
                             txt_prenom.getText() + "', '" +
                             txt_age.getText() + "', '" +
                             cb_classe.getSelectedItem().toString() + "')";

                stmt = conn.createStatement();
                int row = stmt.executeUpdate(sql);

                JOptionPane.showMessageDialog(this, "Inscription réussie");

                // Réinitialisation des champs
                txt_matricule.setText("");
                txt_nom.setText("");
                txt_prenom.setText("");
                txt_age.setText("");
                cb_classe.setSelectedIndex(-1); 
                
                 // Mise à jour  du tableau
                updateTable();
                clearFields();
                
            } catch (SQLException e) {
                
                JOptionPane.showMessageDialog(this, "Erreur lors de l'inscription : " + e.getMessage());
            } finally {
                try {
                    if (stmt != null) stmt.close();
                    if (conn != null) conn.close();
                } catch (SQLException e) {
                    JOptionPane.showMessageDialog(this, "Erreur lors de la fermeture des ressources : " + e.getMessage());
                }
            }
        } else {
            JOptionPane.showMessageDialog(this, "Veuillez remplir tous les champs.");
        }
    }//GEN-LAST:event_btn_ajouterActionPerformed

        private void updateTable() {
        try (Connection conn = DriverManager.getConnection("jdbc:postgresql://localhost:5432/etudiant", "postgres", "1234");
             Statement stmt = conn.createStatement();
             ResultSet rs = stmt.executeQuery("SELECT * FROM eleve")) {

            DefaultTableModel model = (DefaultTableModel) table_eleve.getModel();
            model.setRowCount(0); // Nettoie le tableau

            while (rs.next()) {
                model.addRow(new Object[]{
                    rs.getString("matricule"),
                    rs.getString("nom"),
                    rs.getString("prenom"),
                    rs.getInt("age"),
                    rs.getString("designation")
                });
            }

        } catch (SQLException e) {
            JOptionPane.showMessageDialog(this, "Erreur lors de la récupération des données : " + e.getMessage());
        }
    }
    
    private void cb_classeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cb_classeActionPerformed
        // TODO add your handling code here:
        String selectedDesignation = (String) cb_classe.getSelectedItem();

        if (selectedDesignation == null) {
            return; 
        }

        String sql = "SELECT designation FROM classe WHERE designation = '" + selectedDesignation.replace("'", "''") + "'";

        try (Connection conn = DriverManager.getConnection("jdbc:postgresql://localhost:5432/etudiant", "postgres", "1234");
             Statement stmt = conn.createStatement();
             ResultSet rs = stmt.executeQuery(sql)) {

            if (rs.next()) {
                String designation = rs.getString("designation");
                txt_designation.setText(designation);
            } else {
                txt_designation.setText("");
            }

        } catch (SQLException e) {
            JOptionPane.showMessageDialog(this, "Erreur lors de la récupération des données : " + e.getMessage());
        }
    }//GEN-LAST:event_cb_classeActionPerformed

    private void btn_insererActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_insererActionPerformed

        String sql = "INSERT INTO classe (designation) VALUES ('" + txt_designation.getText().replace("'", "''") + "')";

        // Récupération de la valeur de désignation
        String designation = txt_designation.getText();

        if (designation.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Veuillez entrer une classe.");
            return;
        }

        try (Connection conn = DriverManager.getConnection("jdbc:postgresql://localhost:5432/etudiant", "postgres", "1234");
             Statement stmt = conn.createStatement()) {

            int rowsAffected = stmt.executeUpdate(sql);

            if (rowsAffected > 0) {
                JOptionPane.showMessageDialog(this, "Données insérées avec succès.");
                txt_designation.setText("");
                populateComboBox(); 
                clearFields();
            } else {
                JOptionPane.showMessageDialog(this, "Erreur lors de l'insertion des données.");
            }

        } catch (SQLException e) {
            JOptionPane.showMessageDialog(this, "Erreur lors de l'insertion des données : " + e.getMessage());
        }
    }//GEN-LAST:event_btn_insererActionPerformed

    private void cb_retirerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cb_retirerActionPerformed
        // TODO add your handling code here:
        String selectedDesignation = (String) cb_retirer.getSelectedItem();

        if (selectedDesignation == null) {
            return; 
        }

        String sql = "SELECT designation FROM classe WHERE designation = '" + selectedDesignation.replace("'", "''") + "'";

        try (Connection conn = DriverManager.getConnection("jdbc:postgresql://localhost:5432/etudiant", "postgres", "1234");
             Statement stmt = conn.createStatement();
             ResultSet rs = stmt.executeQuery(sql)) {

            if (rs.next()) {
                String designation = rs.getString("designation");
                txt_designation.setText(designation);
            } else {
                txt_designation.setText("");
            }

        } catch (SQLException e) {
            JOptionPane.showMessageDialog(this, "Erreur lors de la récupération des données : " + e.getMessage());
        }
    }//GEN-LAST:event_cb_retirerActionPerformed

    private void btn_retirerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_retirerActionPerformed
        // TODO add your handling code here:
String selectedDesignation = (String) cb_retirer.getSelectedItem();

        if (selectedDesignation == null) {
            JOptionPane.showMessageDialog(this, "Veuillez sélectionner une désignation à retirer.");
            return;
        }

        String sqlDeleteEleves = "DELETE FROM eleve WHERE designation = ?";
        String sqlDeleteClasse = "DELETE FROM classe WHERE designation = ?";

        try (Connection conn = DriverManager.getConnection("jdbc:postgresql://localhost:5432/etudiant", "postgres", "1234");
             PreparedStatement stmtDeleteEleves = conn.prepareStatement(sqlDeleteEleves);
             PreparedStatement stmtDeleteClasse = conn.prepareStatement(sqlDeleteClasse)) {

            // Supprimer les élèves 
            stmtDeleteEleves.setString(1, selectedDesignation);
            int rowsDeletedEleves = stmtDeleteEleves.executeUpdate();

            // Supprimer la classe
            stmtDeleteClasse.setString(1, selectedDesignation);
            int rowsDeletedClasse = stmtDeleteClasse.executeUpdate();

            if (rowsDeletedClasse > 0) {
                JOptionPane.showMessageDialog(this, "Retrait faite avec succès.");
                cb_classe.removeItem(selectedDesignation);
                cb_retirer.removeItem(selectedDesignation);
                updateTable();
            } else {
                JOptionPane.showMessageDialog(this, "Aucune classe trouvée ");
            }

        } catch (SQLException e) {
            JOptionPane.showMessageDialog(this, "Erreur lors de la suppression : " + e.getMessage());
        }
    }//GEN-LAST:event_btn_retirerActionPerformed

    private void btn_supprimerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_supprimerActionPerformed
        // TODO add your handling code here:
        String matricule = txt_matrsupp.getText().trim();

        if (matricule.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Veuillez entrer le matricule de l'élève à supprimer.");
            return;
        }

        String sqlDeleteEleve = "DELETE FROM eleve WHERE matricule = ?";

        try (Connection conn = DriverManager.getConnection("jdbc:postgresql://localhost:5432/etudiant", "postgres", "1234");
             PreparedStatement stmtDeleteEleve = conn.prepareStatement(sqlDeleteEleve)) {

            stmtDeleteEleve.setString(1, matricule);
            int rowsDeleted = stmtDeleteEleve.executeUpdate();

            if (rowsDeleted > 0) {
                JOptionPane.showMessageDialog(this, "Élève supprimé avec succès.");
                updateTable();
            } else {
                JOptionPane.showMessageDialog(this, "Aucun élève trouvé avec ce matricule.");
            }

        } catch (SQLException e) {
            JOptionPane.showMessageDialog(this, "Erreur lors de la suppression : " + e.getMessage());
        }
    }//GEN-LAST:event_btn_supprimerActionPerformed

    private void btn_chercherActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_chercherActionPerformed
        // TODO add your handling code here:
        String chercheMatricule = txt_chercher.getText().trim();

        if (chercheMatricule.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Veuillez entrer le matricule de l'élève à chercher.");
            return;
        }

        String sql = "SELECT * FROM eleve WHERE matricule = ?";

        try (Connection conn = DriverManager.getConnection("jdbc:postgresql://localhost:5432/etudiant", "postgres", "1234");
             PreparedStatement stmt = conn.prepareStatement(sql)) {

            stmt.setString(1, chercheMatricule);
            ResultSet rs = stmt.executeQuery();

            if (rs.next()) {
                txt_modif_matr.setText(rs.getString("matricule"));
                txt_modif_nom.setText(rs.getString("nom"));
                txt_modif_prenom.setText(rs.getString("prenom"));
                txt_modif_age.setText(String.valueOf(rs.getInt("age")));
                txt_modif_classe.setText(rs.getString("designation"));
                
            } else {
                JOptionPane.showMessageDialog(this, "Aucun élève trouvé avec ce matricule.");
            }

        } catch (SQLException e) {
            JOptionPane.showMessageDialog(this, "Erreur lors de la recherche : " + e.getMessage());
        }
    }//GEN-LAST:event_btn_chercherActionPerformed

    private void btn_modifierActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_modifierActionPerformed
        // TODO add your handling code here:
        String matricule = txt_modif_matr.getText().trim();
        String nom = txt_modif_nom.getText().trim();
        String prenom = txt_modif_prenom.getText().trim();
        String ageStr = txt_modif_age.getText().trim();
        String classe = (String) txt_modif_classe.getText();

        // Vérifier que tous les champs sont remplis
        if (matricule.isEmpty() || nom.isEmpty() || prenom.isEmpty() || ageStr.isEmpty() || classe == null) {
            JOptionPane.showMessageDialog(this, "Veuillez remplir tous les champs.");
            return;
        }

        int age;
        try {
            age = Integer.parseInt(ageStr);
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(this, "L'âge doit être un nombre valide.");
            return;
        }

        String sqlUpdate = "UPDATE eleve SET nom = ?, prenom = ?, age = ?, designation = ? WHERE matricule = ?";

        try (Connection conn = DriverManager.getConnection("jdbc:postgresql://localhost:5432/etudiant", "postgres", "1234");
             PreparedStatement stmt = conn.prepareStatement(sqlUpdate)) {

            stmt.setString(1, nom);
            stmt.setString(2, prenom);
            stmt.setInt(3, age);
            stmt.setString(4, classe);
            stmt.setString(5, matricule);

            int rowsUpdated = stmt.executeUpdate();

            if (rowsUpdated > 0) {
                JOptionPane.showMessageDialog(this, "Les informations de l'élève ont été mises à jour avec succès.");
                updateTable();
                clearFields();
            } else {
                JOptionPane.showMessageDialog(this, "Aucun élève trouvé avec ce matricule.");
            }

        } catch (SQLException e) {
            JOptionPane.showMessageDialog(this, "Erreur lors de la mise à jour : " + e.getMessage());
        }
    }//GEN-LAST:event_btn_modifierActionPerformed

    private void cb_repartitionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cb_repartitionActionPerformed
        String selectedDesignation = (String) cb_repartition.getSelectedItem();

        // Effacer le tableau si rien n'est sélectionné
        if (selectedDesignation == null || selectedDesignation.isEmpty()) {
            clearTable();
            return; 
        }

        String sql = "SELECT matricule, nom, prenom, age FROM eleve WHERE designation = ?";

        try (Connection conn = DriverManager.getConnection("jdbc:postgresql://localhost:5432/etudiant", "postgres", "1234");
             PreparedStatement stmt = conn.prepareStatement(sql)) {

            stmt.setString(1, selectedDesignation);
            ResultSet rs = stmt.executeQuery();

            DefaultTableModel model = (DefaultTableModel) table_repartition.getModel();
            model.setRowCount(0); // Effacer les lignes existantes

            // Ajouter les données des élèves aa la table
            while (rs.next()) {
                String matricule = rs.getString("matricule");
                String nom = rs.getString("nom");
                String prenom = rs.getString("prenom");
                int age = rs.getInt("age");

                model.addRow(new Object[]{matricule, nom, prenom, age});
            }

        } catch (SQLException e) {
            JOptionPane.showMessageDialog(this, "Erreur lors de la récupération des données : " + e.getMessage());
        }
    }//GEN-LAST:event_cb_repartitionActionPerformed
    
    //code non fonctionnelle , appuyer par erreur
    private void txt_designationActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_designationActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_designationActionPerformed
   //
    
    private void clearTable() {
        // Effacer toutes les lignes du tableau
        DefaultTableModel model = (DefaultTableModel) table_repartition.getModel();
        model.setRowCount(0);
    }
    private void loadClassesIntoComboBox() {
        // Exemple de chargement des classes dans la JComboBox cb_repartition
        String sql = "SELECT designation FROM classe";

        try (Connection conn = DriverManager.getConnection("jdbc:postgresql://localhost:5432/etudiant", "postgres", "1234");
             Statement stmt = conn.createStatement();
             ResultSet rs = stmt.executeQuery(sql)) {

            while (rs.next()) {
                cb_repartition.addItem(rs.getString("designation"));
            }

        } catch (SQLException e) {
            JOptionPane.showMessageDialog(this, "Erreur lors du chargement des classes : " + e.getMessage());
        }
    }
    /**
     * @param args the command line arguments
     */
    
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private java.awt.Button btn_ajouter;
    private java.awt.Button btn_chercher;
    private java.awt.Button btn_inserer;
    private java.awt.Button btn_modifier;
    private java.awt.Button btn_quitter;
    private java.awt.Button btn_retirer;
    private java.awt.Button btn_supprimer;
    private javax.swing.JComboBox<String> cb_classe;
    private javax.swing.JComboBox<String> cb_repartition;
    private javax.swing.JComboBox<String> cb_retirer;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel11;
    private javax.swing.JPanel jPanel12;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane8;
    private java.awt.Label label1;
    private java.awt.Label label10;
    private java.awt.Label label11;
    private java.awt.Label label12;
    private java.awt.Label label13;
    private java.awt.Label label3;
    private java.awt.Label label32;
    private java.awt.Label label33;
    private java.awt.Label label35;
    private java.awt.Label label36;
    private java.awt.Label label37;
    private java.awt.Label label4;
    private java.awt.Label label5;
    private java.awt.Label label6;
    private java.awt.Label label7;
    private java.awt.Label label8;
    private java.awt.Label label9;
    private javax.swing.JTable table_eleve;
    private javax.swing.JTable table_repartition;
    private java.awt.TextField txt_age;
    private java.awt.TextField txt_chercher;
    private java.awt.TextField txt_designation;
    private java.awt.TextField txt_matricule;
    private java.awt.TextField txt_matrsupp;
    private java.awt.TextField txt_modif_age;
    private java.awt.TextField txt_modif_classe;
    private java.awt.TextField txt_modif_matr;
    private java.awt.TextField txt_modif_nom;
    private java.awt.TextField txt_modif_prenom;
    private java.awt.TextField txt_nom;
    private java.awt.TextField txt_prenom;
    // End of variables declaration//GEN-END:variables
}
